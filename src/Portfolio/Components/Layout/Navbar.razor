@implements IDisposable

@inject NavigationManager NavigationManager

<!--
    Navbar.razor
    -------------
    This component renders the main navigation bar for the Portfolio application.
    It uses Bootstrap classes for styling and responsive behavior.
    The navigation menu can be toggled open or closed on smaller screens.
-->

<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Portfolio</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <NavLink class="nav-link" href="/#" Match="NavLinkMatch.All">
                        <span class="bi bi-house" aria-hidden="true"></span>
                        Home
                    </NavLink>
                </li>
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <span class="bi bi-database" aria-hidden="true"></span>
                                Data
                            </a>
                            <ul class="dropdown-menu">
                                <li>
                                    <NavLink class="dropdown-item" href="/genre/edit" Match="NavLinkMatch.All">
                                        <span class="bi bi-tags" aria-hidden="true"></span>
                                        Genre tags
                                    </NavLink>
                                    <NavLink class="dropdown-item" href="/portfolioItem/edit" Match="NavLinkMatch.All">
                                        <span class="bi bi-easel" aria-hidden="true"></span>
                                        Portfolio items
                                    </NavLink>
                                    <NavLink class="dropdown-item" href="/portfolioPerson/edit" Match="NavLinkMatch.All">
                                        <span class="bi bi-file-earmark-person" aria-hidden="true"></span>
                                        Person details
                                    </NavLink>
                                </li>
                            </ul>
                        </li>
                    </Authorized>
                </AuthorizeView>
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <span class="bi bi bi-person" aria-hidden="true"></span>
                                Account
                            </a>
                            <ul class="dropdown-menu">
                                <li class="nav-item">
                                    <div class="nav-item px-3">
                                        <NavLink class="nav-link" href="Account/Manage" Match="NavLinkMatch.All">
                                            <span class="bi bi bi-person" aria-hidden="true"></span>
                                            @((context.User.Identity?.Name?.Length ?? 0) > 10
                                                ? context.User.Identity?.Name?.Substring(0, 10) + ".."
                                                : context.User.Identity?.Name)

                                        </NavLink>
                                    </div>
                                </li>
                                <li class="nav-item">
                                    <div class="nav-item px-3">
                                        <form action="Account/Logout" method="post">
                                            <AntiforgeryToken />
                                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                            <button type="submit" class="nav-link">
                                                <span class="bi bi-box-arrow-left" aria-hidden="true"></span>
                                                Logout
                                            </button>
                                        </form>
                                    </div>
                                </li>
                            </ul>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <div class="nav-item px-3">
                                <NavLink class="nav-link" href="Account/Login" Match="NavLinkMatch.All">
                                    <span class="bi bi-person" aria-hidden="true"></span>
                                    Login
                                </NavLink>
                            </div>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}