@page "/"

<style>
    .card-container {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .flip-card {
        background-color: transparent;
        width: 220px;
        height: 120px;
        perspective: 1000px;
    }

    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.6s;
        transform-style: preserve-3d;
    }

    .flip-card:hover .flip-card-inner {
        transform: rotateY(180deg);
    }

    .flip-card-front, .flip-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.1rem;
        border: 1px solid #ccc;
        border-radius: 8px;
        background: #fff;
    }

    .flip-card-back {
        transform: rotateY(180deg);
        background: #f0f0f0;
    }
</style>

<PageTitle>Home</PageTitle>

<h1>My portfolio!</h1>

<p>Here is a sample of project I have done as developer.</p>


<div class="card-container">
    @foreach (var item in portfolioItems)
    {
        <div class="flip-card">
            <div class="flip-card-inner">
                <div class="flip-card-front">
                    <strong>@item.Name</strong>
                </div>
                <div class="flip-card-back">
                    @($"{item.Name} - {string.Join(", ", item.GenreTagAsName)}")
                </div>
            </div>
        </div>
    }
</div>

@* Example data for demonstration *@
@code {
    private List<Portfolio.ViewModels.PortfolioItem> portfolioItems = new()
    {
        new Portfolio.ViewModels.PortfolioItem
        {
            Name = "Sample Project",
            GenreTagAsName = new List<string> { "Web", "Blazor" }
        },
        new Portfolio.ViewModels.PortfolioItem
        {
            Name = "Another Project",
            GenreTagAsName = new List<string> { "API", "Cloud" }
        }
    };
}